{"version":3,"sources":["constants/actions.js","actions/snackbar.js","components/Snackbar/Snackbar.component.js","constants/colors.js","components/GridCalcuator/GridCalculator.style.js","components/GridCalcuator/GridCalculator.component.jsx","actions/mission.js","constants/images.js","assets/nasa.png","assets/think.jpg","assets/mars.jpg","components/SideMenu/SideMenu.style.js","constants/routes.js","components/SideMenu/SideMenu.component.jsx","components/MarsMap/MarsMap.style.js","components/MarsMap/MarsMap.component.jsx","components/Pages/Home/Home.style.js","components/Pages/Easter/Easter.style.js","components/Pages/Easter/Easter.component.jsx","reducers/movementReducer.js","reducers/snackbarReducer.js","reducers/index.js","services/axiosConfig.js","constants/apiUrl.js","services/index.js","services/upload.js","sagas/uploadSaga.js","sagas/snackbarSaga.js","sagas/watchers.js","sagas/index.js","store/index.js","index.jsx","components/Pages/Home/Home.component.jsx"],"names":["enqueueSnackbar","notification","type","actions","payload","key","Date","getTime","Math","random","Snackbar","displayedRef","useRef","dispatch","useDispatch","notifications","useSelector","snackbarReducer","useSnackbar","closeSnackbar","useEffect","forEach","id","message","dismissed","current","includes","variant","onExited","_","snackbarKey","removeSnackbar","filter","propTypes","PropTypes","array","WHITE","RED","BLUE","GRAY","PageWrapper","styled","div","UpdateGridButton","withStyles","root","backgroundColor","color","width","margin","fontSize","border","Button","GridDisplay","display","TextField","GridInput","borderColor","borderWidth","config","grid","label","toUpperCase","error","height","updateButton","text","GridCalculator","missionReducer","currentWidth","currentHeight","formik","useFormik","initialValues","validationSchema","Yup","required","matches","max","onSubmit","values","errors","handleSubmit","handleChange","name","disabled","Boolean","fullWidth","value","noValidate","autoComplete","onChange","onClick","NasaInsignia","Think","Mars","ButtonPrimary","ButtonSecondary","Container","Badge","CardMedia","Title","textAlign","fontWeight","Typography","SideMenu","history","useHistory","useState","file","setFile","handleFileChange","e","target","files","handleUpload","console","log","push","routes","image","images","title","aria-label","component","substring","hidden","src","MarsMap","BackNavButton","initialState","numberOfRovers","combineReducers","state","action","map","dismissAll","BASE_URL","instance","axios","create","baseURL","responseType","interceptors","request","use","url","withCredentials","response","Promise","reject","upload","postNewMovementFile","data","a","api","method","apiUrl","postNewFile","call","services","put","addToSnackbar","require","watchUpload","watchSnackbar","all","takeLatest","uploadSaga","takeEvery","snackbarSaga","rootSaga","fork","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","composeWithDevTools","applyMiddleware","run","app","maxSnack","createBrowserHistory","path","to","here","document","querySelector","render"],"mappings":"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","file":"static/js/main.12d27a8e.chunk.js","sourcesContent":["//snackbar\r\nconst ENQUEUE_SNACKBAR = 'ENQUEUE_SNACKBAR'\r\nconst CLOSE_SNACKBAR = 'CLOSE_SNACKBAR'\r\nconst REMOVE_SNACKBAR = 'REMOVE_SNACKBAR'\r\n//file upload\r\nconst FILE_UPLOAD = 'FILE_UPLOAD'\r\nconst FILE_UPLOAD_SUCCESS = 'FILE_UPLOAD_SUCCESS'\r\nconst FILE_UPLOAD_FAIL = 'FILE_UPLOAD_FAIL'\r\n//updat grid\r\nconst UPDATE_GRID = 'UPDATE_GRID'\r\n\r\nexport default {\r\n  FILE_UPLOAD,\r\n  FILE_UPLOAD_SUCCESS,\r\n  FILE_UPLOAD_FAIL,\r\n  ENQUEUE_SNACKBAR,\r\n  CLOSE_SNACKBAR,\r\n  REMOVE_SNACKBAR,\r\n  UPDATE_GRID,\r\n}\r\n","import actions from '../constants/actions'\r\n\r\nexport const enqueueSnackbar = (notification) => {\r\n  return {\r\n    type: actions.ENQUEUE_SNACKBAR,\r\n    payload: {\r\n      ...notification,\r\n      key: notification.key || new Date().getTime() + Math.random(),\r\n    },\r\n  }\r\n}\r\n\r\nexport const closeSnackbar = (key) => ({\r\n  type: actions.CLOSE_SNACKBAR,\r\n  payload: {\r\n    dismissAll: !key,\r\n    key,\r\n  },\r\n})\r\n\r\nexport const removeSnackbar = (key) => ({\r\n  type: actions.REMOVE_SNACKBAR,\r\n  payload: { key },\r\n})\r\n","import { useEffect, useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useSnackbar } from 'notistack'\r\nimport { removeSnackbar } from '../../actions/snackbar'\r\n\r\nconst Snackbar = () => {\r\n  const displayedRef = useRef([])\r\n  const dispatch = useDispatch()\r\n  const notifications = useSelector(\r\n    ({ snackbarReducer }) => snackbarReducer.notifications\r\n  )\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar()\r\n\r\n  const storeDisplayed = (id) => {\r\n    displayedRef.current = [...displayedRef.current, id]\r\n  }\r\n\r\n  const removeDisplayed = (id) => {\r\n    displayedRef.current = [...displayedRef.current.filter((key) => id !== key)]\r\n  }\r\n\r\n  useEffect(() => {\r\n    notifications.forEach(\r\n      ({ key, message, type = 'default', dismissed = false }) => {\r\n        if (dismissed) {\r\n          closeSnackbar(key)\r\n          return\r\n        }\r\n\r\n        if (displayedRef.current.includes(key)) return\r\n\r\n        enqueueSnackbar(message, {\r\n          key,\r\n          variant: type,\r\n          onExited: (_, snackbarKey) => {\r\n            dispatch(removeSnackbar(snackbarKey))\r\n            removeDisplayed(snackbarKey)\r\n          },\r\n        })\r\n\r\n        storeDisplayed(key)\r\n      }\r\n    )\r\n  }, [notifications, enqueueSnackbar, closeSnackbar, dispatch])\r\n\r\n  return null\r\n}\r\n\r\nSnackbar.propTypes = {\r\n  notifications: PropTypes.array,\r\n}\r\n\r\nexport { Snackbar }\r\n","export const TRANSPARENT = 'transparent'\r\nexport const WHITE = 'white'\r\nexport const BLACK = 'black'\r\nexport const RED = '#ff0000'\r\nexport const BLUE = '#4487c7'\r\nexport const BLUE_SECONDARY = '#2d7fbb'\r\nexport const YELLOW_PRIMARY = '#efcb1b'\r\nexport const YELLOW_SECONDARY = '#fcf5d1'\r\nexport const GRAY = '#c2c2c2'\r\nexport const GRAY_SECONDARY = '#7d7d7d'\r\nexport const MAIN_GRADIENT =\r\n  'linear-gradient(45deg,  rgba(1, 27, 52, 1) 0%,rgba(65, 132, 196, 1) 100%)'\r\n","import styled from 'styled-components'\r\nimport { Button, TextField, withStyles } from '@material-ui/core'\r\nimport { BLUE, WHITE, GRAY, RED } from '../../constants/colors'\r\n\r\nexport const PageWrapper = styled.div`\r\n  width: 100%;\r\n  margin: 10px 0;\r\n  padding: 20px;\r\n`\r\n\r\nexport const UpdateGridButton = withStyles(() => ({\r\n  root: {\r\n    backgroundColor: BLUE,\r\n    color: WHITE,\r\n    width: '90%',\r\n    margin: '10px 5%',\r\n    fontSize: '1rem',\r\n    border: `1px solid ${BLUE}`,\r\n  },\r\n}))(Button)\r\n\r\nexport const GridDisplay = withStyles(() => ({\r\n  root: {\r\n    width: '100%',\r\n    display: 'block',\r\n    margin: '10px 0',\r\n    fontSize: '1rem',\r\n    '& .Mui-disabled': {\r\n      color: GRAY,\r\n    },\r\n    '& .MuiInputBase-input': {\r\n      color: GRAY,\r\n    },\r\n  },\r\n}))(TextField)\r\n\r\nexport const GridInput = withStyles(() => ({\r\n  root: {\r\n    width: '40%',\r\n    margin: '10px 10px',\r\n    fontSize: '1rem',\r\n    '& label': {\r\n      color: GRAY,\r\n    },\r\n    '& label.Mui-focused': {\r\n      color: WHITE,\r\n    },\r\n    '& input:valid + fieldset': {\r\n      borderColor: GRAY,\r\n      borderWidth: 1,\r\n    },\r\n    '& input:invalid + fieldset': {\r\n      borderColor: RED,\r\n      borderWidth: 1,\r\n    },\r\n    '& input:valid:focus + fieldset': {\r\n      borderColor: WHITE,\r\n    },\r\n    '& .MuiOutlinedInput-input': {\r\n      color: WHITE,\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n      '& fieldset': {\r\n        borderColor: RED,\r\n      },\r\n      '&:hover fieldset': {\r\n        borderColor: WHITE,\r\n      },\r\n    },\r\n  },\r\n}))(TextField)\r\n","import React from 'react'\r\nimport { useFormik } from 'formik'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateGrid } from '../../actions/mission'\r\nimport * as Yup from 'yup'\r\nimport * as GC from './GridCalculator.style'\r\n\r\nconst config = {\r\n  grid: {\r\n    type: 'grid',\r\n    label: 'Current grid size'.toUpperCase(),\r\n    error: 'Please insert a valid number',\r\n  },\r\n  height: {\r\n    type: 'height',\r\n    label: 'Height',\r\n  },\r\n  width: {\r\n    type: 'width',\r\n    label: 'Width',\r\n  },\r\n  updateButton: {\r\n    text: 'Update grid',\r\n  },\r\n}\r\n\r\nconst GridCalculator = () => {\r\n  const dispatch = useDispatch()\r\n  const [currentWidth, currentHeight] = useSelector(({ missionReducer }) => [\r\n    missionReducer.grid.width,\r\n    missionReducer.grid.height,\r\n  ])\r\n  const formik = useFormik({\r\n    initialValues: { width: currentWidth, height: currentHeight },\r\n    validationSchema: Yup.object({\r\n      width: Yup.string()\r\n        .required('Must be at least 1 digit')\r\n        .matches(/[0-9]+$/, 'Must be only digits')\r\n        .max(3, 'Mars too big!'),\r\n      height: Yup.string()\r\n        .required('Must be at least 1 digit')\r\n        .matches(/[0-9]+$/, 'Must be only digits')\r\n        .max(3, 'Mars too big!'),\r\n    }),\r\n    onSubmit: (values) => {\r\n      dispatch(updateGrid(values))\r\n    },\r\n  })\r\n\r\n  const { values, errors, handleSubmit, handleChange } = formik\r\n\r\n  return (\r\n    <GC.PageWrapper>\r\n      <GC.GridDisplay\r\n        name={config.grid.type}\r\n        disabled={true}\r\n        label={\r\n          errors.width\r\n            ? errors.width\r\n            : errors.height\r\n            ? errors.height\r\n            : config.grid.label\r\n        }\r\n        error={Boolean(errors.width || errors.height)}\r\n        fullWidth\r\n        value={`${currentWidth} x ${currentHeight}`}\r\n      />\r\n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n        <GC.GridInput\r\n          name={config.width.type}\r\n          error={Boolean(errors.width)}\r\n          label={config.width.label}\r\n          value={values.width}\r\n          onChange={handleChange}\r\n          variant=\"outlined\"\r\n        />\r\n        <GC.GridInput\r\n          name={config.height.type}\r\n          error={Boolean(errors.height)}\r\n          label={config.height.label}\r\n          value={values.height}\r\n          onChange={handleChange}\r\n          variant=\"outlined\"\r\n        />\r\n      </form>\r\n      <GC.UpdateGridButton\r\n        variant=\"contained\"\r\n        disabled={Boolean(errors.width || errors.height)}\r\n        onClick={handleSubmit}\r\n      >\r\n        {config.updateButton.text}\r\n      </GC.UpdateGridButton>\r\n    </GC.PageWrapper>\r\n  )\r\n}\r\n\r\nexport { GridCalculator }\r\n","import actions from '../constants/actions'\r\n\r\nexport const postNewMovementFile = (fileData) => ({\r\n  type: actions.FILE_UPLOAD,\r\n  payload: fileData,\r\n})\r\n\r\nexport const postNewMovementFileSuccess = (fileData) => ({\r\n  type: actions.FILE_UPLOAD_SUCCESS,\r\n  payload: fileData,\r\n})\r\n\r\nexport const postNewMovementFileFail = (error) => ({\r\n  type: actions.FILE_UPLOAD_FAIL,\r\n  payload: error,\r\n})\r\n\r\nexport const updateGrid = (grid) => ({\r\n  type: actions.UPDATE_GRID,\r\n  payload: grid,\r\n})\r\n","import NasaInsignia from '../assets/nasa.png'\r\nimport Think from '../assets/think.jpg'\r\nimport Mars from '../assets/mars.jpg'\r\n\r\nexport default {\r\n  NasaInsignia,\r\n  Think,\r\n  Mars,\r\n}\r\n","export default __webpack_public_path__ + \"static/media/nasa.c8f782fb.png\";","export default __webpack_public_path__ + \"static/media/think.b396b49b.jpg\";","export default __webpack_public_path__ + \"static/media/mars.79d6e93a.jpg\";","import styled from 'styled-components'\r\nimport { Button, Typography, CardMedia, withStyles } from '@material-ui/core'\r\nimport { BLUE, WHITE, RED, MAIN_GRADIENT } from '../../constants/colors'\r\n\r\nexport const ButtonPrimary = withStyles(() => ({\r\n  root: {\r\n    backgroundColor: BLUE,\r\n    color: WHITE,\r\n    width: '90%',\r\n    margin: '10px 5%',\r\n    fontSize: '1rem',\r\n    border: `1px solid ${BLUE}`,\r\n  },\r\n}))(Button)\r\n\r\nexport const ButtonSecondary = withStyles(() => ({\r\n  root: {\r\n    backgroundColor: RED,\r\n    color: WHITE,\r\n    width: '90%',\r\n    margin: '10px 5%',\r\n    fontSize: '1rem',\r\n    border: `1px solid ${RED}`,\r\n  },\r\n}))(Button)\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0px;\r\n  display: grid;\r\n  grid-template-rows: 170px 100px auto 60px 60px;\r\n  border-left: 3px solid ${BLUE};\r\n  background: ${MAIN_GRADIENT};\r\n`\r\n\r\nexport const Badge = withStyles(() => ({\r\n  root: {\r\n    color: WHITE,\r\n    width: '200px',\r\n    height: '150px',\r\n    margin: '10px auto',\r\n  },\r\n}))(CardMedia)\r\n\r\nexport const Title = withStyles(() => ({\r\n  root: {\r\n    textAlign: 'center',\r\n    fontSize: '2rem',\r\n    fontWeight: '900',\r\n    color: WHITE,\r\n  },\r\n}))(Typography)\r\n","const HOME = '/home'\r\nconst CONSPIRACY = '/cake-is-a-lie'\r\n\r\nexport default {\r\n  HOME,\r\n  CONSPIRACY,\r\n}\r\n","import React, { useState } from 'react'\r\nimport { GridCalculator } from '../GridCalcuator'\r\nimport images from '../../constants/images'\r\nimport * as SM from './SideMenu.style'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport routes from '../../constants/routes'\r\nimport { postNewMovementFile } from '../../actions/mission'\r\n\r\nconst config = {\r\n  buttonSecondary: {\r\n    text: 'Launch Mission',\r\n  },\r\n  buttonPrimary: {\r\n    text: 'Upload routes',\r\n  },\r\n  title: 'NASA',\r\n  description: 'Mission to MARS',\r\n  modal: {\r\n    uploadButton: 'Upload selected',\r\n    cancelButton: 'Cancel',\r\n  },\r\n}\r\n\r\nconst SideMenu = () => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const [file, setFile] = useState(null)\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0])\r\n  }\r\n\r\n  const conditionalPrimaryButtonContent = () => {\r\n    console.log('conditional', file)\r\n    return file ? (\r\n      `Upload ${file.name.substring(0, 8)}...`\r\n    ) : (\r\n      <>\r\n        {config.buttonPrimary.text}\r\n        <input type=\"file\" hidden onChange={handleFileChange} />\r\n      </>\r\n    )\r\n  }\r\n\r\n  const handleNavClick = () => history.push(routes.CONSPIRACY)\r\n\r\n  const handleUpload = () => {\r\n    console.log('Upload', file)\r\n    const payload = {\r\n      test: 'test',\r\n    }\r\n    dispatch(postNewMovementFile(file))\r\n  }\r\n\r\n  return (\r\n    <SM.Container>\r\n      <SM.Badge\r\n        onClick={handleNavClick}\r\n        image={images.NasaInsignia}\r\n        title={config.title}\r\n      />\r\n      <SM.Title>{config.description}</SM.Title>\r\n      <GridCalculator />\r\n      <SM.ButtonPrimary\r\n        variant=\"contained\"\r\n        aria-label=\"upload\"\r\n        onClick={file ? () => handleUpload() : null}\r\n        component=\"label\"\r\n      >\r\n        {conditionalPrimaryButtonContent()}\r\n      </SM.ButtonPrimary>\r\n      <SM.ButtonSecondary\r\n        variant=\"contained\"\r\n        aria-label=\"launch\"\r\n        onClick={file ? () => setFile(null) : () => console.log('Launching')}\r\n      >\r\n        {file ? 'clear selected' : config.buttonSecondary.text}\r\n      </SM.ButtonSecondary>\r\n    </SM.Container>\r\n  )\r\n}\r\n\r\nexport { SideMenu }\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  background-image: url(${({ src }) => src});\r\n`\r\n","import React from 'react'\r\nimport images from '../../constants/images'\r\nimport * as MS from './MarsMap.style'\r\n\r\nconst MarsMap = () => {\r\n  return <MS.Container src={images.Mars}></MS.Container>\r\n}\r\n\r\nexport { MarsMap }\r\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: auto 300px;\n  height: 100%;\n  width: 100%;\n`\n","import styled from 'styled-components'\nimport { Button, Typography, CardMedia, withStyles } from '@material-ui/core'\nimport { WHITE, RED, GRAY } from '../../../constants/colors'\n\nexport const PageWrapper = styled.div`\n  height: 100%;\n  width: 100%;\n`\nexport const BackNavButton = withStyles(() => ({\n  root: {\n    backgroundColor: RED,\n    color: WHITE,\n    width: '90%',\n    margin: '10px 5%',\n    fontSize: '1rem',\n    border: `1px solid ${RED}`,\n  },\n}))(Button)\n\nexport const Badge = withStyles(() => ({\n  root: {\n    color: WHITE,\n    width: '200px',\n    height: '150px',\n    margin: '10px auto',\n  },\n}))(CardMedia)\n\nexport const Title = withStyles(() => ({\n  root: {\n    textAlign: 'center',\n    fontSize: '2rem',\n    fontWeight: '900',\n    color: GRAY,\n  },\n}))(Typography)\n","import React from 'react'\nimport images from '../../../constants/images'\nimport * as ES from './Easter.style'\nimport { useHistory } from 'react-router-dom'\nimport routes from '../../../constants/routes'\n\nconst config = {\n  backNav: 'Back to the conspiracy',\n  p1: 'The cake is a lie',\n  p2: 'The earth is flat',\n  p3: 'Flat earthers rule, Globers drool',\n  imageTitle: 'Think!',\n}\n\nconst Easter = () => {\n  const history = useHistory()\n  const handleBacknavClick = () => history.push(routes.HOME)\n\n  return (\n    <ES.PageWrapper>\n      <ES.BackNavButton onClick={handleBacknavClick}>\n        {config.backNav}\n      </ES.BackNavButton>\n      <ES.Title>{config.p1}</ES.Title>\n      <ES.Title>{config.p2}</ES.Title>\n      <ES.Title>{config.p3}</ES.Title>\n      <ES.Badge image={images.Think} title={config.imageTitle} />\n    </ES.PageWrapper>\n  )\n}\n\nexport { Easter }\n","import actions from '../constants/actions'\n\nconst initialState = {\n  numberOfRovers: 0,\n  error: null,\n  grid: {\n    height: 400,\n    width: 400,\n  },\n}\n\nconst missionReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.FILE_UPLOAD_SUCCESS: {\n      return {\n        ...state,\n        numberOfRovers: action.payload,\n      }\n    }\n    case actions.FILE_UPLOAD_FAIL: {\n      return {\n        ...state,\n        error: action.payload,\n      }\n    }\n    case actions.UPDATE_GRID: {\n      return {\n        ...state,\n        grid: action.payload,\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\nexport { missionReducer }\n","import actions from '../constants/actions'\r\n\r\nconst initialState = {\r\n  notifications: [],\r\n}\r\n\r\nconst snackbarReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actions.ENQUEUE_SNACKBAR: {\r\n      return {\r\n        ...state,\r\n        notifications: [...state.notifications, action.payload],\r\n      }\r\n    }\r\n    case actions.CLOSE_SNACKBAR: {\r\n      let notifications = () => {\r\n        state.notifications.map((notification) =>\r\n          action.payload.dismissAll || notification.key === action.payload.key\r\n            ? { ...notification, dismissed: true }\r\n            : notification\r\n        )\r\n      }\r\n      return {\r\n        ...state,\r\n        notifications: notifications(),\r\n      }\r\n    }\r\n    case actions.REMOVE_SNACKBAR: {\r\n      let notifications = () =>\r\n        state.notifications.filter(\r\n          (notification) => notification.key !== action.payload.key\r\n        )\r\n\r\n      return {\r\n        ...state,\r\n        notifications: notifications(),\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport { snackbarReducer }\r\n","import { combineReducers } from 'redux'\r\nimport { missionReducer } from './movementReducer'\r\nimport { snackbarReducer } from './snackbarReducer'\r\n\r\nexport default combineReducers({\r\n  missionReducer,\r\n  snackbarReducer,\r\n})\r\n","import axios from 'axios'\r\n// const BASE_URL = '35.177.84.34'\r\nconst BASE_URL = 'http://localhost:54210'\r\n\r\nconst instance = axios.create({\r\n  baseURL: BASE_URL + '/api',\r\n  responseType: 'json',\r\n})\r\n\r\ninstance.interceptors.request.use((request) => {\r\n  if (request.url.includes(BASE_URL)) {\r\n    request.withCredentials = false\r\n    request.baseURL = BASE_URL\r\n  }\r\n  return request\r\n})\r\n\r\ninstance.interceptors.response.use(\r\n  (response) => {\r\n    return response\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport default instance\r\n","// set this one up as an exclusion array so it can plug-and-play scale\r\nconst apis = ['/upload']\r\n\r\nexport default {\r\n  apis,\r\n}\r\n","import upload from './upload'\r\nexport default { upload }\r\n","import api from './axiosConfig'\r\nimport apiUrl from '../constants/apiUrl'\r\n\r\nconst postNewMovementFile = async (data) => {\r\n  try {\r\n    const response = await api({\r\n      method: 'POST',\r\n      url: apiUrl.apis[0],\r\n      data,\r\n    })\r\n\r\n    return response.data\r\n  } catch (error) {\r\n    throw error\r\n  }\r\n}\r\n\r\nexport default {\r\n  postNewMovementFile,\r\n}\r\n","import { call, put } from 'redux-saga/effects'\r\nimport {\r\n  postNewMovementFileSuccess,\r\n  postNewMovementFileFail,\r\n} from '../actions/mission'\r\nimport services from '../services'\r\n\r\nfunction* postNewFile(action) {\r\n  try {\r\n    const response = yield call(\r\n      services.upload.postNewMovementFile,\r\n      action.payload\r\n    )\r\n\r\n    yield put(postNewMovementFileSuccess(response))\r\n  } catch (error) {\r\n    yield put(postNewMovementFileFail(error))\r\n  }\r\n}\r\n\r\nexport default {\r\n  postNewFile,\r\n}\r\n","import { enqueueSnackbar } from '../actions/snackbar'\r\n\r\nconst { put } = require('redux-saga/effects')\r\n\r\nfunction* addToSnackbar(...data) {\r\n  console.log('wooot')\r\n  const [message, type] = data\r\n  yield put(enqueueSnackbar({ message, type }))\r\n}\r\n\r\nexport default {\r\n  addToSnackbar,\r\n}\r\n","import { takeEvery, takeLatest, all } from 'redux-saga/effects'\r\nimport actions from '../constants/actions'\r\nimport uploadSaga from './uploadSaga'\r\nimport snackbarSaga from './snackbarSaga'\r\n\r\n//intercept FILE_UPLOAD\r\nfunction* watchUpload() {\r\n  yield all([takeLatest(actions.FILE_UPLOAD, uploadSaga.postNewFile)])\r\n}\r\n\r\n//intercept UPLOAD_FAIL or SUCCESS and display appropriate snackbar message\r\nfunction* watchSnackbar() {\r\n  yield takeEvery(\r\n    actions.FILE_UPLOAD_FAIL,\r\n    snackbarSaga.addToSnackbar,\r\n    'File could not be uploaded!',\r\n    'error'\r\n  )\r\n  yield takeEvery(\r\n    [actions.FILE_UPLOAD_SUCCESS, actions.UPDATE_GRID],\r\n    snackbarSaga.addToSnackbar,\r\n    'Changes have been saved successfully!',\r\n    'success'\r\n  )\r\n}\r\n\r\nexport { watchUpload, watchSnackbar }\r\n","import { fork } from 'redux-saga/effects'\r\nimport { watchUpload, watchSnackbar } from './watchers'\r\n\r\nfunction* rootSaga() {\r\n  yield fork(watchUpload)\r\n  yield fork(watchSnackbar)\r\n}\r\n\r\nexport default rootSaga\r\n","import { applyMiddleware, createStore } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport reducers from '../reducers'\nimport rootSaga from '../sagas'\n\nconst sagaMiddleware = createSagaMiddleware()\nconst store = createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n)\nsagaMiddleware.run(rootSaga)\n\nexport default store\n","import React from 'react'\nimport { Route, Switch, Redirect, Router } from 'react-router-dom'\nimport { createBrowserHistory } from 'history'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { SnackbarProvider } from 'notistack'\nimport { Snackbar } from './components/Snackbar'\nimport { Home } from './components/Pages/Home'\nimport { Easter } from './components/Pages/Easter'\nimport routes from './constants/routes'\nimport store from './store'\nimport './index.css'\n\nconst app = (\n  <Provider store={store}>\n    <SnackbarProvider maxSnack={3}>\n      <Snackbar />\n      <Router history={createBrowserHistory()}>\n        <Switch>\n          <Route path={routes.HOME} component={Home} />\n          <Route path={routes.CONSPIRACY} component={Easter} />\n          <Redirect to={routes.HOME} />\n        </Switch>\n      </Router>\n    </SnackbarProvider>\n  </Provider>\n)\nconst here = document.querySelector('#here')\nrender(app, here)\n","import React from 'react'\nimport { SideMenu } from '../../SideMenu'\nimport { MarsMap } from '../../MarsMap'\nimport * as HS from './Home.style'\n\nconst Home = () => {\n  return (\n    <HS.Container>\n      <MarsMap />\n      <SideMenu />\n    </HS.Container>\n  )\n}\n\nexport { Home }\n"],"sourceRoot":""}